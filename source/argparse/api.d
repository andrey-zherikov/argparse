module argparse.api;

import argparse.config;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Public API
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct Param(VALUE_TYPE)
{
    const Config* config;
    string name;

    static if(!is(VALUE_TYPE == void))
        VALUE_TYPE value;
}

alias RawParam = Param!(string[]);

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Default subcommand
struct Default(COMMAND)
{
    COMMAND command;
    alias command this;
}

package enum isDefault(T) = is(T == Default!ORIG_TYPE, ORIG_TYPE);

package alias RemoveDefault(T : Default!ORIG_TYPE, ORIG_TYPE) = ORIG_TYPE;
package alias RemoveDefault(T) = T;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

struct TrailingArguments {}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////